<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="47" failures="0" errors="0" time="4.807">
  <testsuite name="removeNullAndUndefined" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="0.815" tests="3">
    <testcase classname="removeNullAndUndefined should remove null and undefined values from the object" name="removeNullAndUndefined should remove null and undefined values from the object" time="0.007">
    </testcase>
    <testcase classname="removeNullAndUndefined should return an empty object if all values are null or undefined" name="removeNullAndUndefined should return an empty object if all values are null or undefined" time="0">
    </testcase>
    <testcase classname="removeNullAndUndefined should return the same object if there are no null or undefined values" name="removeNullAndUndefined should return the same object if there are no null or undefined values" time="0">
    </testcase>
  </testsuite>
  <testsuite name="utils&gt;expenses" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:32" time="0.085" tests="8">
    <testcase classname="utils&gt;expenses labelsById should return an empty object for an empty array" name="utils&gt;expenses labelsById should return an empty object for an empty array" time="0.001">
    </testcase>
    <testcase classname="utils&gt;expenses labelsById should return an object with one label" name="utils&gt;expenses labelsById should return an object with one label" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses labelsById should return an object with multiple labels" name="utils&gt;expenses labelsById should return an object with multiple labels" time="0.001">
    </testcase>
    <testcase classname="utils&gt;expenses selectLabelByExpenseName should return undefined for no labels" name="utils&gt;expenses selectLabelByExpenseName should return undefined for no labels" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses selectLabelByExpenseName should return undefined for no matching label" name="utils&gt;expenses selectLabelByExpenseName should return undefined for no matching label" time="0.001">
    </testcase>
    <testcase classname="utils&gt;expenses selectLabelByExpenseName should return matching label by exact key" name="utils&gt;expenses selectLabelByExpenseName should return matching label by exact key" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses selectLabelByExpenseName should return matching label by partial key" name="utils&gt;expenses selectLabelByExpenseName should return matching label by partial key" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses selectLabelByExpenseName should return the first matching label when multiple labels match" name="utils&gt;expenses selectLabelByExpenseName should return the first matching label when multiple labels match" time="0">
    </testcase>
  </testsuite>
  <testsuite name="utils&gt;expenses" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="1.199" tests="17">
    <testcase classname="utils&gt;expenses getDateFromQuery should return date with specified year and month" name="utils&gt;expenses getDateFromQuery should return date with specified year and month" time="0.005">
    </testcase>
    <testcase classname="utils&gt;expenses getDateFromQuery should return date with specified year only" name="utils&gt;expenses getDateFromQuery should return date with specified year only" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses getDateFromQuery should return date with specified month only" name="utils&gt;expenses getDateFromQuery should return date with specified month only" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses getDateFromQuery should return current date when no year and month are specified" name="utils&gt;expenses getDateFromQuery should return current date when no year and month are specified" time="0.001">
    </testcase>
    <testcase classname="utils&gt;expenses getDateFromQuery should throw error for invalid year" name="utils&gt;expenses getDateFromQuery should throw error for invalid year" time="0.016">
    </testcase>
    <testcase classname="utils&gt;expenses getDateFromQuery should throw error for invalid month" name="utils&gt;expenses getDateFromQuery should throw error for invalid month" time="0.001">
    </testcase>
    <testcase classname="utils&gt;expenses formatValue formats whole number correctly" name="utils&gt;expenses formatValue formats whole number correctly" time="0.005">
    </testcase>
    <testcase classname="utils&gt;expenses formatValue formats decimal number correctly" name="utils&gt;expenses formatValue formats decimal number correctly" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses formatValue removes trailing .00" name="utils&gt;expenses formatValue removes trailing .00" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses formatValue formats zero correctly" name="utils&gt;expenses formatValue formats zero correctly" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses expensesByDate should return an empty object for an empty array" name="utils&gt;expenses expensesByDate should return an empty object for an empty array" time="0.001">
    </testcase>
    <testcase classname="utils&gt;expenses expensesByDate should group expenses by the same date" name="utils&gt;expenses expensesByDate should group expenses by the same date" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses expensesByDate should group expenses by different dates" name="utils&gt;expenses expensesByDate should group expenses by different dates" time="0.001">
    </testcase>
    <testcase classname="utils&gt;expenses expensesByDate should handle expenses with different date formats" name="utils&gt;expenses expensesByDate should handle expenses with different date formats" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses expensesByLabel should return an empty object when no expenses are provided" name="utils&gt;expenses expensesByLabel should return an empty object when no expenses are provided" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses expensesByLabel should group expenses by label" name="utils&gt;expenses expensesByLabel should group expenses by label" time="0">
    </testcase>
    <testcase classname="utils&gt;expenses expensesByLabel should sort labels by the sum of expense values" name="utils&gt;expenses expensesByLabel should sort labels by the sum of expense values" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components&gt;loading" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="1.313" tests="3">
    <testcase classname="components&gt;loading B4hLoading renders B4hLoadingLogo component" name="components&gt;loading B4hLoading renders B4hLoadingLogo component" time="0.028">
    </testcase>
    <testcase classname="components&gt;loading B4hLoadingLogo renders with default size" name="components&gt;loading B4hLoadingLogo renders with default size" time="0.003">
    </testcase>
    <testcase classname="components&gt;loading B4hLoadingLogo renders with given size" name="components&gt;loading B4hLoadingLogo renders with given size" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="B4hSeparator" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="1.351" tests="1">
    <testcase classname="B4hSeparator renders separator with correct class" name="B4hSeparator renders separator with correct class" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="B4hNotFound" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="1.421" tests="1">
    <testcase classname="B4hNotFound renders not found message" name="B4hNotFound renders not found message" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="B4hError" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="1.458" tests="1">
    <testcase classname="B4hError renders error message" name="B4hError renders error message" time="0.127">
    </testcase>
  </testsuite>
  <testsuite name="B4hExpenseSummary" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="1.781" tests="2">
    <testcase classname="B4hExpenseSummary renders total used, left and percentage correctly" name="B4hExpenseSummary renders total used, left and percentage correctly" time="0.192">
    </testcase>
    <testcase classname="B4hExpenseSummary renders negative percentage with correct style" name="B4hExpenseSummary renders negative percentage with correct style" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="B4hExpensesHeader" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="1.963" tests="6">
    <testcase classname="B4hExpensesHeader renders correctly with empty query" name="B4hExpensesHeader renders correctly with empty query" time="0.072">
    </testcase>
    <testcase classname="B4hExpensesHeader renders correctly with initial values" name="B4hExpensesHeader renders correctly with initial values" time="0.004">
    </testcase>
    <testcase classname="B4hExpensesHeader handles month change" name="B4hExpensesHeader handles month change" time="0.007">
    </testcase>
    <testcase classname="B4hExpensesHeader handles view by change to byDate" name="B4hExpensesHeader handles view by change to byDate" time="0.004">
    </testcase>
    <testcase classname="B4hExpensesHeader handles view by change to byLabel" name="B4hExpensesHeader handles view by change to byLabel" time="0.004">
    </testcase>
    <testcase classname="B4hExpensesHeader handles view by change to byChart" name="B4hExpensesHeader handles view by change to byChart" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="B4hExpensesItems" errors="0" failures="0" skipped="0" timestamp="2024-11-13T06:25:31" time="2.383" tests="5">
    <testcase classname="B4hExpensesItems renders expense items by byDate" name="B4hExpensesItems renders expense items by byDate" time="0.047">
    </testcase>
    <testcase classname="B4hExpensesItems renders expense items by byLabel" name="B4hExpensesItems renders expense items by byLabel" time="0.009">
    </testcase>
    <testcase classname="B4hExpensesItems render expense items header grouped by date" name="B4hExpensesItems render expense items header grouped by date" time="0.006">
    </testcase>
    <testcase classname="B4hExpensesItems render expense items header grouped by label" name="B4hExpensesItems render expense items header grouped by label" time="0.005">
    </testcase>
    <testcase classname="B4hExpensesItems renders expense items by chart" name="B4hExpensesItems renders expense items by chart" time="0.022">
    </testcase>
  </testsuite>
</testsuites>