name: budget4home next
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: install dependencies 📦
        run: yarn install
      - name: pretiter 💅
        run: yarn prettier:check
      - name: lint 🕵️‍♂️
        run: yarn lint
      - name: build 🏗️
        run: yarn build
      - name: test ✅
        run: yarn test:integration

      - name: store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - name: cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
      - name: setup Playwright
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: ui test ✅
        run: yarn nx e2e b4h-next-e2e

      # - name: Upload test results to Codecov 📊
      #   uses: codecov/test-results-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: './coverage/libs/models/coverage-final.json,.coverage/libs/models/junit.xml,./coverage/libs/firestore/junit.xml,.coverage/libs/firestore/clover.xml,./coverage/libs/firestore/coverage-final.json,./coverage/apps/b4h-next/coverage-final.json,./coverage/apps/b4h-next/junit.json'
  preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != format('refs/heads/{0}', github.event.repository.default_branch)
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install Vercel CLI 🖥️
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information 📥
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts 🏗️
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel 🚀
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
  production:
    runs-on: ubuntu-latest
    needs: [build, preview]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install Vercel CLI 🖥️
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information 📥
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts 🏗️
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel 🚀
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
